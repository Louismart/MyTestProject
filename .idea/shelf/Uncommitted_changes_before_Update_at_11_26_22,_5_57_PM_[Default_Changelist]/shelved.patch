Index: src/test/java/RestApiCourseTest/firstApiTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package RestApiCourseTest;\n\nimport io.restassured.builder.RequestSpecBuilder;\nimport io.restassured.http.ContentType;\nimport io.restassured.specification.RequestSpecification;\nimport org.testng.annotations.BeforeClass;\nimport org.testng.annotations.Test;\n\nimport static io.restassured.RestAssured.given;\nimport static io.restassured.RestAssured.when;\n\n/*\nspec for this API under test https://punkapi.com/documentation/v2\n */\npublic class firstApiTest {\n\n    private static RequestSpecification requestSpec;\n    private static final int PER_PAGE = 80;\n\n    @BeforeClass\n    public static void createRequestSpecification() {\n        requestSpec = new RequestSpecBuilder().\n                setBaseUri(\"https://api.punkapi.com\").\n                setBasePath(\"v2\").\n                setAccept(ContentType.TEXT).\n                setBody(\"test\").// Works for POST, PUT and DELETE requests, here for GET just example\n                build();\n    }\n\n    //https://api.punkapi.com/v2/beers?page=2&per_page=80\n    @Test\n    public void test() {\n        given().\n                spec(requestSpec).\n                pathParam(\"endpoint\", \"beers\").\n                param(\"page\", 2).\n                param(\"per_page\", 80).\n                log().all().\n                get(\"{endpoint}\").\n                then().\n                log().\n                body().\n                statusCode(200);\n    }\n\n    @Test\n    public void test1() {\n        given().\n                log().headers().\n                // all().\n                        when().\n                get(\"https://google.com\").\n                then().log().all().\n                statusCode(200);\n    }\n\n    @Test\n    public void test2() {\n        when().\n                get(\"https://google.com\").\n                then().log().headers().\n                statusCode(200);\n    }\n\n    //https://api.punkapi.com/v2/beers?page=2&per_page=80\n    @Test\n    public void testWithParameters3() {\n        given().\n                pathParam(\"endpoint\", \"beers\").\n                param(\"per_page\", 76).\n                param(\"page\", 2).\n                when().\n                get(\"https://api.punkapi.com/v2/{endpoint}\").\n                then().\n                log().\n                body().\n                statusCode(200);\n    }\n\n    //https://api.punkapi.com/v2/beers?page=2&per_page=80\n    @Test\n    public void testWithPathParameters4() {\n        given().\n                pathParam(\"endpoint\", \"beers\").\n                pathParam(\"xyz\", \"abc\").\n                when().\n                get(\"https://api.punkapi.com/v2/{endpoint}/{xyz}\").\n                then().\n                log().body().\n                statusCode(200);\n    }\n\n    @Test\n    public void testWithPathParameters5() {\n        given().\n                accept(ContentType.JSON).\n                pathParam(\"endpoint\", \"beers\").\n                param(\"page\", 4).\n                param(\"per_page\", 80).\n                log().\n                headers().\n                when().\n                get(\"https://api.punkapi.com/v2/{endpoint}\").\n                then().\n                log().\n                body().\n                statusCode(200);\n    }\n\n    @Test\n    public void testWithHeaders() {\n        given().\n                header(\"x\", \"y\").\n                accept(ContentType.TEXT).log().headers().\n                pathParam(\"endpoint\", \"beers\").\n                param(\"page\", 2).\n                param(\"per_page\", 80).\n                when().\n                get(\"https://api.punkapi.com/v2/{endpoint}\").\n                then().\n                log().\n                body().\n                statusCode(200);\n\n    }\n    //https://api.punkapi.com/v2/beers?page=2&per_page=80\n    @Test\n    public void badRequestTest1() {\n        given().\n                header(\"x\", \"y\").\n                accept(ContentType.TEXT).log().headers().\n                pathParam(\"endpoint\", \"beers\").\n                param(\"page\", 0). //change to invalid parameter\n                param(\"per_page\", 80).\n                when().\n                get(\"https://api.punkapi.com/v2/{endpoint}\").\n                then().\n                log().\n                all().\n                statusCode(400);\n\n    }\n\n    @Test\n    public void badRequestTest2() {\n        given().\n                when().\n                get(\"https://api.punkapi.com/v2/beers?brewed_before=11-2012&abv_gt=\").  //parameter was deleted\n                then().log().all().\n                statusCode(400);\n    }\n\n    @Test\n    public void selectedBeerTest() {\n        given().\n                when().\n                get(\"https://api.punkapi.com/v2/beers?ids=22|23|45\").  //parameter was deleted\n                then().log().all().\n                statusCode(200);\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/RestApiCourseTest/firstApiTest.java b/src/test/java/RestApiCourseTest/FirstApiTest.java
rename from src/test/java/RestApiCourseTest/firstApiTest.java
rename to src/test/java/RestApiCourseTest/FirstApiTest.java
--- a/src/test/java/RestApiCourseTest/firstApiTest.java	(revision 086ce041b955dfb8b45c883a0515b1695ab06202)
+++ b/src/test/java/RestApiCourseTest/FirstApiTest.java	(date 1669481833218)
@@ -12,7 +12,7 @@
 /*
 spec for this API under test https://punkapi.com/documentation/v2
  */
-public class firstApiTest {
+public class FirstApiTest {
 
     private static RequestSpecification requestSpec;
     private static final int PER_PAGE = 80;
